---
description:
globs:
alwaysApply: false
---
# Background Service Architecture

The background service is the core of the Random Beep extension, handling timing, break generation, and notifications.

## Background Script Structure

- [background/background.js](mdc:background/background.js): Main entry point, initializes components and handles messaging
- [background/timer.js](mdc:background/timer.js): Manages timing logic and session tracking
- [background/break-generator.js](mdc:background/break-generator.js): Implements random break algorithm
- [background/notification.js](mdc:background/notification.js): Handles browser notifications

## Key Functions

The background service exposes these main functions:

```javascript
// Session Control
startSession() // Start a new focus session
pauseSession() // Pause the current session
resumeSession() // Resume a paused session
resetSession() // Reset the current session
endSession() // End the current session

// Break Logic
scheduleRandomBreaks() // Schedule random short breaks
scheduleLongBreak() // Schedule long break
triggerShortBreak() // Start a short break
triggerLongBreak() // Start a long break
endBreak() // End the current break

// Storage Operations
saveSessionState() // Save the current session state
loadSessionState() // Load the session state from storage
updateStatistics() // Update usage statistics
```

## Communication Flow

The background service communicates with other components using Chrome's messaging API:

```javascript
// Listening for messages from popup and options
chrome.runtime.onMessage.addListener(handleMessage);

// Sending updates to popup
chrome.runtime.sendMessage({ type: "session_update", data: sessionData });
```
