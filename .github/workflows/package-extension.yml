name: Package Chrome Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Create extension package (ZIP)
        run: |
          echo "Creating Chrome extension ZIP package..."
          mkdir -p dist
          # Create zip directly from files without creating nested folders
          cd $(pwd) && zip -r dist/random-beep.zip background icons lib options popup sounds statistics storage utils _locales manifest.json offscreen.html offscreen.js
      
      - name: Install dependencies for CRX creation
        run: |
          npm init -y
          npm install chrome-webstore-upload-cli --save-dev
          npm install crx --save-dev
      
      - name: Create extension package (CRX)
        run: |
          echo "Creating Chrome extension CRX package..."
          # Generate a key if not exists
          if [ ! -f dist/key.pem ]; then
            openssl genrsa -out dist/key.pem 2048
          fi
          
          # Create a temporary directory for packing
          mkdir -p temp_ext
          cp -r background icons lib options popup sounds statistics storage utils _locales manifest.json offscreen.html offscreen.js temp_ext/
          
          # Use crx npm package to create the CRX file
          npx crx pack temp_ext -o dist/random-beep.crx -p dist/key.pem
          
          # List files to verify
          ls -la dist/
      
      - name: Upload extension packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: random-beep-extension
          path: |
            dist/random-beep.zip
            dist/random-beep.crx
      
      - name: Create release if tagged version
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Creating release for version $VERSION"
          echo "Checking if CRX file exists:"
          ls -la dist/
          
          # Create release with available files
          if [ -f "dist/random-beep.crx" ]; then
            gh release create "${{ github.ref_name }}" \
              --title "Random Beep v$VERSION" \
              --notes "Release of version $VERSION. See CHANGELOG.md for details." \
              dist/random-beep.zip \
              dist/random-beep.crx
          else
            echo "CRX file not found, creating release with ZIP only"
            gh release create "${{ github.ref_name }}" \
              --title "Random Beep v$VERSION" \
              --notes "Release of version $VERSION. See CHANGELOG.md for details." \
              dist/random-beep.zip
          fi 